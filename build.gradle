// gradle에서 kotlin을 컴파일하기 위해 필요한 buildscript
// refs: https://plugins.gradle.org/plugin/org.jetbrains.kotlin.jvm
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

group = 'udong-map'
version = '1.0-SNAPSHOT'

subprojects {
    repositories {
        // geotools
        maven { url 'https://repo.osgeo.org/repository/release/' }
        jcenter()
    }

    // subprojects에 대해서는 plugins DSL이 먹지 않아서 레거시 방법인 apply plugin:을 사용해야 한다.
    // refs: https://stackoverflow.com/questions/32352816/what-the-difference-in-applying-gradle-plugin#answer-32353244
    apply plugin: 'kotlin' // apply plugin: "org.jetbrains.kotlin.jvm"과 동일한 효과인가? 바꿔도 동일하게 동작한다.

    dependencies {
        testImplementation group: 'junit', name: 'junit', version: '4.12'
    }

    compileKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }

    // ktlint 관련 설정
    configurations {
        ktlint
    }

    dependencies {
        ktlint("com.pinterest:ktlint:0.41.0") {
            attributes {
                attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
            }
        }
        // additional 3rd party ruleset(s) can be specified here
        // just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and
        // ktlint will pick them up
    }

    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "src/**/*.kt"
        // to generate report in checkstyle format prepend following args:
        // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
        // to add a baseline to check against prepend following args:
        // "--baseline=ktlint-baseline.xml"
        // see https://github.com/pinterest/ktlint#usage for more
    }
    check.dependsOn ktlint

    // ktlintFormat은 쓰지 않을 예정이다.
//    task ktlintFormat(type: JavaExec, group: "formatting") {
//        description = "Fix Kotlin code style deviations."
//        classpath = configurations.ktlint
//        main = "com.pinterest.ktlint.Main"
//        args "-F", "src/**/*.kt"
//    }
}
